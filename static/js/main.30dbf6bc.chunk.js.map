{"version":3,"sources":["components/QuoteBox.js","components/Header.js","components/Main.js","index.js"],"names":["QuoteBox","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","randomArrPosition","arr","Math","floor","random","length","newQuote","rollQuote","state","quotesArr","quotesArrPosition","setState","currentQuote","quote","currentAuthor","author","setColor","newTweet","url","window","open","githubPage","setBackground","color","document","documentElement","style","colorArr","colorArrPosition","rollResult","currentColor","isLoaded","error","_this2","fetch","then","res","json","result","initialArrPosition","quotes","react_default","a","createElement","id","className","onClick","backgroundColor","index_es","icon","faTwitter","faGithub","Component","Header","library","add","fab","Main","components_Header","components_QuoteBox","ReactDOM","render","components_Main","getElementById"],"mappings":"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","file":"static/js/main.30dbf6bc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nclass QuoteBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      quotesArr: [],\n      currentQuote: \"\",\n      currentAuthor: \"\",\n      quotesArrPosition: 0,\n      currentColor: \"#FE938C\",\n      error: null,\n      colorArr: [\"#B91372\", \"#41EAD4\", \"#FF0022\", \"#F39237\", \"#39A9DB\"]\n    };\n  }\n\n  componentDidMount() {\n    fetch(\n      \"https://gist.githubusercontent.com/matthewmcintyre/cbcf178400711246051631e9e84955ec/raw/483a15ebf0c26165d77dffa5427b07cf743097c1/quotes.json\"\n    )\n      .then(res => res.json())\n      .then(\n        result => {\n          let initialArrPosition = this.randomArrPosition(result.quotes);\n\n          this.setState({\n            isLoaded: true,\n            quotesArr: result.quotes,\n            quotesArrPosition: initialArrPosition,\n            currentQuote: result.quotes[initialArrPosition].quote,\n            currentAuthor: result.quotes[initialArrPosition].author\n          });\n        },\n        error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      );\n  }\n\n  randomArrPosition = arr => {\n    return Math.floor(Math.random() * arr.length);\n  };\n\n  newQuote = () => {\n    let rollQuote = this.randomArrPosition(this.state.quotesArr);\n\n    while (this.randomArrPosition(this.state.quotesArrPosition) === rollQuote) {\n      rollQuote = Math.floor(Math.random() * this.state.quotesArr.length);\n    }\n\n    this.setState({\n      currentQuote: this.state.quotesArr[rollQuote].quote,\n      currentAuthor: this.state.quotesArr[rollQuote].author\n    });\n\n    this.setColor();\n  };\n\n  newTweet = () => {\n    let url =\n      \"https://twitter.com/intent/tweet?text=\" +\n      this.state.currentQuote +\n      \"  - \" +\n      this.state.currentAuthor;\n\n    window.open(url);\n  };\n\n  githubPage = () => {\n    window.open(\"http://matthewmcintyre.me\");\n  };\n\n  setBackground = color => {\n    document.documentElement.style =\n      \"background: \" + this.state.colorArr[this.state.colorArrPosition] + \";\";\n  };\n\n  setColor = () => {\n    let rollResult = this.randomArrPosition(this.state.colorArr);\n\n    while (rollResult === this.state.colorArrPosition) {\n      rollResult = this.randomArrPosition(this.state.colorArr);\n    }\n\n    this.setState({\n      currentColor: this.state.colorArr[rollResult],\n      colorArrPosition: rollResult\n    });\n    document.documentElement.style =\n      \"background: \" + this.state.colorArr[rollResult] + \";\";\n  };\n\n  render() {\n    return (\n      <div id=\"quote-box\">\n        <p id=\"quote\">\"{this.state.currentQuote}\"</p>\n        <p id=\"author\">- {this.state.currentAuthor}</p>\n        <div className=\"buttonDiv\">\n          <button\n            className=\"myButton hvr-grow-shadow\"\n            onClick={this.newQuote}\n            style={{\n              backgroundColor: this.state.currentColor\n            }}\n          >\n            New Quote\n          </button>\n          <div id=\"socialButtons\">\n            <button\n              className=\"socialButton hvr-grow-shadow\"\n              onClick={this.newTweet}\n              style={{\n                backgroundColor: this.state.currentColor\n              }}\n            >\n              <FontAwesomeIcon icon={faTwitter} />\n            </button>\n            <button\n              className=\"socialButton hvr-grow-shadow\"\n              onClick={this.githubPage}\n              style={{\n                backgroundColor: this.state.currentColor\n              }}\n            >\n              <FontAwesomeIcon icon={faGithub} />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QuoteBox;\n","import React, { Component } from \"react\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <div id=\"header\">\n        <h1>Random Quote Machine</h1>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport QuoteBox from \"./QuoteBox\";\nimport Header from \"./Header\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\n\nlibrary.add(fab, faTwitter);\n\nconst Main = () => {\n  return (\n    <div id=\"main\">\n      <Header />\n      <QuoteBox />\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Main from \"./components/Main\";\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n"],"sourceRoot":""}